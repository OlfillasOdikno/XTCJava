// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steamnetworkingsockets_messages_certs.proto

package com.valve.gamenetworkingsockets.proto.messages;

public final class Certs {
  private Certs() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CMsgSteamDatagramCertificateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamDatagramCertificate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     */
    boolean hasKeyType();
    /**
     * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     */
    com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType getKeyType();

    /**
     * <code>optional bytes key_data = 2;</code>
     */
    boolean hasKeyData();
    /**
     * <code>optional bytes key_data = 2;</code>
     */
    com.google.protobuf.ByteString getKeyData();

    /**
     * <code>optional fixed64 steam_id = 4;</code>
     */
    boolean hasSteamId();
    /**
     * <code>optional fixed64 steam_id = 4;</code>
     */
    long getSteamId();

    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     */
    java.util.List<java.lang.Integer> getGameserverDatacenterIdsList();
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     */
    int getGameserverDatacenterIdsCount();
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     */
    int getGameserverDatacenterIds(int index);

    /**
     * <code>optional fixed32 time_created = 8;</code>
     */
    boolean hasTimeCreated();
    /**
     * <code>optional fixed32 time_created = 8;</code>
     */
    int getTimeCreated();

    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     */
    boolean hasTimeExpiry();
    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     */
    int getTimeExpiry();

    /**
     * <code>optional uint32 app_id = 10;</code>
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 10;</code>
     */
    int getAppId();
  }
  /**
   * Protobuf type {@code CMsgSteamDatagramCertificate}
   */
  public  static final class CMsgSteamDatagramCertificate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgSteamDatagramCertificate)
      CMsgSteamDatagramCertificateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgSteamDatagramCertificate.newBuilder() to construct.
    private CMsgSteamDatagramCertificate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamDatagramCertificate() {
      keyType_ = 0;
      keyData_ = com.google.protobuf.ByteString.EMPTY;
      steamId_ = 0L;
      gameserverDatacenterIds_ = java.util.Collections.emptyList();
      timeCreated_ = 0;
      timeExpiry_ = 0;
      appId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgSteamDatagramCertificate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType value = com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                keyType_ = rawValue;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              keyData_ = input.readBytes();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000004;
              steamId_ = input.readFixed64();
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameserverDatacenterIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameserverDatacenterIds_.add(input.readFixed32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                gameserverDatacenterIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                gameserverDatacenterIds_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 69: {
              bitField0_ |= 0x00000008;
              timeCreated_ = input.readFixed32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000010;
              timeExpiry_ = input.readFixed32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              appId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameserverDatacenterIds_ = java.util.Collections.unmodifiableList(gameserverDatacenterIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.class, com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgSteamDatagramCertificate.EKeyType}
     */
    public enum EKeyType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID = 0;</code>
       */
      INVALID(0),
      /**
       * <code>ED25519 = 1;</code>
       */
      ED25519(1),
      ;

      /**
       * <code>INVALID = 0;</code>
       */
      public static final int INVALID_VALUE = 0;
      /**
       * <code>ED25519 = 1;</code>
       */
      public static final int ED25519_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EKeyType valueOf(int value) {
        return forNumber(value);
      }

      public static EKeyType forNumber(int value) {
        switch (value) {
          case 0: return INVALID;
          case 1: return ED25519;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EKeyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EKeyType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EKeyType>() {
              public EKeyType findValueByNumber(int number) {
                return EKeyType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.getDescriptor().getEnumTypes().get(0);
      }

      private static final EKeyType[] VALUES = values();

      public static EKeyType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EKeyType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgSteamDatagramCertificate.EKeyType)
    }

    private int bitField0_;
    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private int keyType_;
    /**
     * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     */
    public boolean hasKeyType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     */
    public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType getKeyType() {
      @SuppressWarnings("deprecation")
      com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType result = com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType.valueOf(keyType_);
      return result == null ? com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType.INVALID : result;
    }

    public static final int KEY_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString keyData_;
    /**
     * <code>optional bytes key_data = 2;</code>
     */
    public boolean hasKeyData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes key_data = 2;</code>
     */
    public com.google.protobuf.ByteString getKeyData() {
      return keyData_;
    }

    public static final int STEAM_ID_FIELD_NUMBER = 4;
    private long steamId_;
    /**
     * <code>optional fixed64 steam_id = 4;</code>
     */
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed64 steam_id = 4;</code>
     */
    public long getSteamId() {
      return steamId_;
    }

    public static final int GAMESERVER_DATACENTER_IDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> gameserverDatacenterIds_;
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getGameserverDatacenterIdsList() {
      return gameserverDatacenterIds_;
    }
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     */
    public int getGameserverDatacenterIdsCount() {
      return gameserverDatacenterIds_.size();
    }
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     */
    public int getGameserverDatacenterIds(int index) {
      return gameserverDatacenterIds_.get(index);
    }

    public static final int TIME_CREATED_FIELD_NUMBER = 8;
    private int timeCreated_;
    /**
     * <code>optional fixed32 time_created = 8;</code>
     */
    public boolean hasTimeCreated() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional fixed32 time_created = 8;</code>
     */
    public int getTimeCreated() {
      return timeCreated_;
    }

    public static final int TIME_EXPIRY_FIELD_NUMBER = 9;
    private int timeExpiry_;
    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     */
    public boolean hasTimeExpiry() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     */
    public int getTimeExpiry() {
      return timeExpiry_;
    }

    public static final int APP_ID_FIELD_NUMBER = 10;
    private int appId_;
    /**
     * <code>optional uint32 app_id = 10;</code>
     */
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 app_id = 10;</code>
     */
    public int getAppId() {
      return appId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, keyType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, keyData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed64(4, steamId_);
      }
      for (int i = 0; i < gameserverDatacenterIds_.size(); i++) {
        output.writeFixed32(5, gameserverDatacenterIds_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFixed32(8, timeCreated_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFixed32(9, timeExpiry_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(10, appId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, keyType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, keyData_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, steamId_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getGameserverDatacenterIdsList().size();
        size += dataSize;
        size += 1 * getGameserverDatacenterIdsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, timeCreated_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, timeExpiry_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, appId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate)) {
        return super.equals(obj);
      }
      com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate other = (com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate) obj;

      boolean result = true;
      result = result && (hasKeyType() == other.hasKeyType());
      if (hasKeyType()) {
        result = result && keyType_ == other.keyType_;
      }
      result = result && (hasKeyData() == other.hasKeyData());
      if (hasKeyData()) {
        result = result && getKeyData()
            .equals(other.getKeyData());
      }
      result = result && (hasSteamId() == other.hasSteamId());
      if (hasSteamId()) {
        result = result && (getSteamId()
            == other.getSteamId());
      }
      result = result && getGameserverDatacenterIdsList()
          .equals(other.getGameserverDatacenterIdsList());
      result = result && (hasTimeCreated() == other.hasTimeCreated());
      if (hasTimeCreated()) {
        result = result && (getTimeCreated()
            == other.getTimeCreated());
      }
      result = result && (hasTimeExpiry() == other.hasTimeExpiry());
      if (hasTimeExpiry()) {
        result = result && (getTimeExpiry()
            == other.getTimeExpiry());
      }
      result = result && (hasAppId() == other.hasAppId());
      if (hasAppId()) {
        result = result && (getAppId()
            == other.getAppId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyType()) {
        hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + keyType_;
      }
      if (hasKeyData()) {
        hash = (37 * hash) + KEY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getKeyData().hashCode();
      }
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (getGameserverDatacenterIdsCount() > 0) {
        hash = (37 * hash) + GAMESERVER_DATACENTER_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getGameserverDatacenterIdsList().hashCode();
      }
      if (hasTimeCreated()) {
        hash = (37 * hash) + TIME_CREATED_FIELD_NUMBER;
        hash = (53 * hash) + getTimeCreated();
      }
      if (hasTimeExpiry()) {
        hash = (37 * hash) + TIME_EXPIRY_FIELD_NUMBER;
        hash = (53 * hash) + getTimeExpiry();
      }
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamDatagramCertificate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamDatagramCertificate)
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.class, com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.Builder.class);
      }

      // Construct using com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        keyData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        steamId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameserverDatacenterIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        timeCreated_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        timeExpiry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        appId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificate_descriptor;
      }

      @java.lang.Override
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate getDefaultInstanceForType() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.getDefaultInstance();
      }

      @java.lang.Override
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate build() {
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate buildPartial() {
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate result = new com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyType_ = keyType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.keyData_ = keyData_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.steamId_ = steamId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          gameserverDatacenterIds_ = java.util.Collections.unmodifiableList(gameserverDatacenterIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.gameserverDatacenterIds_ = gameserverDatacenterIds_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeCreated_ = timeCreated_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.timeExpiry_ = timeExpiry_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.appId_ = appId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate) {
          return mergeFrom((com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate other) {
        if (other == com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          setKeyType(other.getKeyType());
        }
        if (other.hasKeyData()) {
          setKeyData(other.getKeyData());
        }
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (!other.gameserverDatacenterIds_.isEmpty()) {
          if (gameserverDatacenterIds_.isEmpty()) {
            gameserverDatacenterIds_ = other.gameserverDatacenterIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGameserverDatacenterIdsIsMutable();
            gameserverDatacenterIds_.addAll(other.gameserverDatacenterIds_);
          }
          onChanged();
        }
        if (other.hasTimeCreated()) {
          setTimeCreated(other.getTimeCreated());
        }
        if (other.hasTimeExpiry()) {
          setTimeExpiry(other.getTimeExpiry());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int keyType_ = 0;
      /**
       * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       */
      public boolean hasKeyType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       */
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType getKeyType() {
        @SuppressWarnings("deprecation")
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType result = com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType.valueOf(keyType_);
        return result == null ? com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType.INVALID : result;
      }
      /**
       * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       */
      public Builder setKeyType(com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate.EKeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        keyType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       */
      public Builder clearKeyType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes key_data = 2;</code>
       */
      public boolean hasKeyData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes key_data = 2;</code>
       */
      public com.google.protobuf.ByteString getKeyData() {
        return keyData_;
      }
      /**
       * <code>optional bytes key_data = 2;</code>
       */
      public Builder setKeyData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        keyData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes key_data = 2;</code>
       */
      public Builder clearKeyData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        keyData_ = getDefaultInstance().getKeyData();
        onChanged();
        return this;
      }

      private long steamId_ ;
      /**
       * <code>optional fixed64 steam_id = 4;</code>
       */
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed64 steam_id = 4;</code>
       */
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional fixed64 steam_id = 4;</code>
       */
      public Builder setSteamId(long value) {
        bitField0_ |= 0x00000004;
        steamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steam_id = 4;</code>
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> gameserverDatacenterIds_ = java.util.Collections.emptyList();
      private void ensureGameserverDatacenterIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameserverDatacenterIds_ = new java.util.ArrayList<java.lang.Integer>(gameserverDatacenterIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getGameserverDatacenterIdsList() {
        return java.util.Collections.unmodifiableList(gameserverDatacenterIds_);
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public int getGameserverDatacenterIdsCount() {
        return gameserverDatacenterIds_.size();
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public int getGameserverDatacenterIds(int index) {
        return gameserverDatacenterIds_.get(index);
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public Builder setGameserverDatacenterIds(
          int index, int value) {
        ensureGameserverDatacenterIdsIsMutable();
        gameserverDatacenterIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public Builder addGameserverDatacenterIds(int value) {
        ensureGameserverDatacenterIdsIsMutable();
        gameserverDatacenterIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public Builder addAllGameserverDatacenterIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameserverDatacenterIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gameserverDatacenterIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       */
      public Builder clearGameserverDatacenterIds() {
        gameserverDatacenterIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int timeCreated_ ;
      /**
       * <code>optional fixed32 time_created = 8;</code>
       */
      public boolean hasTimeCreated() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional fixed32 time_created = 8;</code>
       */
      public int getTimeCreated() {
        return timeCreated_;
      }
      /**
       * <code>optional fixed32 time_created = 8;</code>
       */
      public Builder setTimeCreated(int value) {
        bitField0_ |= 0x00000010;
        timeCreated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 time_created = 8;</code>
       */
      public Builder clearTimeCreated() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timeCreated_ = 0;
        onChanged();
        return this;
      }

      private int timeExpiry_ ;
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       */
      public boolean hasTimeExpiry() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       */
      public int getTimeExpiry() {
        return timeExpiry_;
      }
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       */
      public Builder setTimeExpiry(int value) {
        bitField0_ |= 0x00000020;
        timeExpiry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       */
      public Builder clearTimeExpiry() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timeExpiry_ = 0;
        onChanged();
        return this;
      }

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 10;</code>
       */
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 app_id = 10;</code>
       */
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 10;</code>
       */
      public Builder setAppId(int value) {
        bitField0_ |= 0x00000040;
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 10;</code>
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        appId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgSteamDatagramCertificate)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamDatagramCertificate)
    private static final com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate();
    }

    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgSteamDatagramCertificate>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamDatagramCertificate>() {
      @java.lang.Override
      public CMsgSteamDatagramCertificate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgSteamDatagramCertificate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamDatagramCertificate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamDatagramCertificate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamDatagramCertificateSignedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgSteamDatagramCertificateSigned)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes cert = 4;</code>
     */
    boolean hasCert();
    /**
     * <code>optional bytes cert = 4;</code>
     */
    com.google.protobuf.ByteString getCert();

    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     */
    boolean hasCaKeyId();
    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     */
    long getCaKeyId();

    /**
     * <code>optional bytes ca_signature = 6;</code>
     */
    boolean hasCaSignature();
    /**
     * <code>optional bytes ca_signature = 6;</code>
     */
    com.google.protobuf.ByteString getCaSignature();
  }
  /**
   * Protobuf type {@code CMsgSteamDatagramCertificateSigned}
   */
  public  static final class CMsgSteamDatagramCertificateSigned extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgSteamDatagramCertificateSigned)
      CMsgSteamDatagramCertificateSignedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgSteamDatagramCertificateSigned.newBuilder() to construct.
    private CMsgSteamDatagramCertificateSigned(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamDatagramCertificateSigned() {
      cert_ = com.google.protobuf.ByteString.EMPTY;
      caKeyId_ = 0L;
      caSignature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgSteamDatagramCertificateSigned(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 34: {
              bitField0_ |= 0x00000001;
              cert_ = input.readBytes();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000002;
              caKeyId_ = input.readFixed64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000004;
              caSignature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificateSigned_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificateSigned_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.class, com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.Builder.class);
    }

    private int bitField0_;
    public static final int CERT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString cert_;
    /**
     * <code>optional bytes cert = 4;</code>
     */
    public boolean hasCert() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes cert = 4;</code>
     */
    public com.google.protobuf.ByteString getCert() {
      return cert_;
    }

    public static final int CA_KEY_ID_FIELD_NUMBER = 5;
    private long caKeyId_;
    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     */
    public boolean hasCaKeyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     */
    public long getCaKeyId() {
      return caKeyId_;
    }

    public static final int CA_SIGNATURE_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString caSignature_;
    /**
     * <code>optional bytes ca_signature = 6;</code>
     */
    public boolean hasCaSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes ca_signature = 6;</code>
     */
    public com.google.protobuf.ByteString getCaSignature() {
      return caSignature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(4, cert_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(5, caKeyId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(6, caSignature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, cert_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, caKeyId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, caSignature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned)) {
        return super.equals(obj);
      }
      com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned other = (com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned) obj;

      boolean result = true;
      result = result && (hasCert() == other.hasCert());
      if (hasCert()) {
        result = result && getCert()
            .equals(other.getCert());
      }
      result = result && (hasCaKeyId() == other.hasCaKeyId());
      if (hasCaKeyId()) {
        result = result && (getCaKeyId()
            == other.getCaKeyId());
      }
      result = result && (hasCaSignature() == other.hasCaSignature());
      if (hasCaSignature()) {
        result = result && getCaSignature()
            .equals(other.getCaSignature());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCert()) {
        hash = (37 * hash) + CERT_FIELD_NUMBER;
        hash = (53 * hash) + getCert().hashCode();
      }
      if (hasCaKeyId()) {
        hash = (37 * hash) + CA_KEY_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCaKeyId());
      }
      if (hasCaSignature()) {
        hash = (37 * hash) + CA_SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getCaSignature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgSteamDatagramCertificateSigned}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgSteamDatagramCertificateSigned)
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSignedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificateSigned_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificateSigned_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.class, com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.Builder.class);
      }

      // Construct using com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cert_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        caKeyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        caSignature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.internal_static_CMsgSteamDatagramCertificateSigned_descriptor;
      }

      @java.lang.Override
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned getDefaultInstanceForType() {
        return com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.getDefaultInstance();
      }

      @java.lang.Override
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned build() {
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned buildPartial() {
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned result = new com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cert_ = cert_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.caKeyId_ = caKeyId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.caSignature_ = caSignature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned) {
          return mergeFrom((com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned other) {
        if (other == com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned.getDefaultInstance()) return this;
        if (other.hasCert()) {
          setCert(other.getCert());
        }
        if (other.hasCaKeyId()) {
          setCaKeyId(other.getCaKeyId());
        }
        if (other.hasCaSignature()) {
          setCaSignature(other.getCaSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString cert_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes cert = 4;</code>
       */
      public boolean hasCert() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes cert = 4;</code>
       */
      public com.google.protobuf.ByteString getCert() {
        return cert_;
      }
      /**
       * <code>optional bytes cert = 4;</code>
       */
      public Builder setCert(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cert_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes cert = 4;</code>
       */
      public Builder clearCert() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cert_ = getDefaultInstance().getCert();
        onChanged();
        return this;
      }

      private long caKeyId_ ;
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       */
      public boolean hasCaKeyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       */
      public long getCaKeyId() {
        return caKeyId_;
      }
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       */
      public Builder setCaKeyId(long value) {
        bitField0_ |= 0x00000002;
        caKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       */
      public Builder clearCaKeyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        caKeyId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString caSignature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes ca_signature = 6;</code>
       */
      public boolean hasCaSignature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes ca_signature = 6;</code>
       */
      public com.google.protobuf.ByteString getCaSignature() {
        return caSignature_;
      }
      /**
       * <code>optional bytes ca_signature = 6;</code>
       */
      public Builder setCaSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        caSignature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes ca_signature = 6;</code>
       */
      public Builder clearCaSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        caSignature_ = getDefaultInstance().getCaSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgSteamDatagramCertificateSigned)
    }

    // @@protoc_insertion_point(class_scope:CMsgSteamDatagramCertificateSigned)
    private static final com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned();
    }

    public static com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgSteamDatagramCertificateSigned>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamDatagramCertificateSigned>() {
      @java.lang.Override
      public CMsgSteamDatagramCertificateSigned parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgSteamDatagramCertificateSigned(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamDatagramCertificateSigned> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamDatagramCertificateSigned> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.valve.gamenetworkingsockets.proto.messages.Certs.CMsgSteamDatagramCertificateSigned getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamDatagramCertificate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgSteamDatagramCertificate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgSteamDatagramCertificateSigned_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgSteamDatagramCertificateSigned_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+steamnetworkingsockets_messages_certs." +
      "proto\"\211\002\n\034CMsgSteamDatagramCertificate\022A" +
      "\n\010key_type\030\001 \001(\0162&.CMsgSteamDatagramCert" +
      "ificate.EKeyType:\007INVALID\022\020\n\010key_data\030\002 " +
      "\001(\014\022\020\n\010steam_id\030\004 \001(\006\022!\n\031gameserver_data" +
      "center_ids\030\005 \003(\007\022\024\n\014time_created\030\010 \001(\007\022\023" +
      "\n\013time_expiry\030\t \001(\007\022\016\n\006app_id\030\n \001(\r\"$\n\010E" +
      "KeyType\022\013\n\007INVALID\020\000\022\013\n\007ED25519\020\001\"[\n\"CMs" +
      "gSteamDatagramCertificateSigned\022\014\n\004cert\030" +
      "\004 \001(\014\022\021\n\tca_key_id\030\005 \001(\006\022\024\n\014ca_signature" +
      "\030\006 \001(\014B:\n.com.valve.gamenetworkingsocket" +
      "s.proto.messagesB\005Certs\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_CMsgSteamDatagramCertificate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgSteamDatagramCertificate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgSteamDatagramCertificate_descriptor,
        new java.lang.String[] { "KeyType", "KeyData", "SteamId", "GameserverDatacenterIds", "TimeCreated", "TimeExpiry", "AppId", });
    internal_static_CMsgSteamDatagramCertificateSigned_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgSteamDatagramCertificateSigned_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgSteamDatagramCertificateSigned_descriptor,
        new java.lang.String[] { "Cert", "CaKeyId", "CaSignature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
